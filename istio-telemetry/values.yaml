mixer:
  # If set to true, will add 'rule' and 'stdio' handler for access logs.
  # If false, user will need to configure their own rules outside of installer.
  stdioAccessLog: false

  image: mixer
  env:
    GODEBUG: gctrace=2
  enabled: true
  replicaCount: 1
  autoscaleEnabled: true
  autoscaleMin: 1
  autoscaleMax: 5
  cpu:
    targetAverageUtilization: 80

  resources:
    requests:
      cpu: 900m
      memory: 1G

  podAnnotations: {}

  adapters:
    prometheus:
      metricsExpiryDuration: 10m


grafana:
  enabled: true
  replicaCount: 1
  image:
    repository: grafana/grafana
    tag: 5.2.3
  persist: false
  storageClassName: ""
  accessMode: ReadWriteMany
  security:
    enabled: false
    secretName: grafana
    usernameKey: username
    passphraseKey: passphrase
  service:
    annotations: {}
    name: http
    type: ClusterIP
    externalPort: 3000
    loadBalancerIP:
    loadBalancerSourceRanges:

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          orgId: 1
          url: http://prometheus:9090
          access: proxy
          isDefault: true
          jsonData:
            timeInterval: 5s
          editable: true

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'istio'
          orgId: 1
          folder: 'istio'
          type: file
          disableDeletion: false
          options:
            path: /var/lib/grafana/dashboards/istio


#
# addon prometheus configuration
#
prometheus:
  enabled: true
  replicaCount: 1
  hub: docker.io/prom
  tag: v2.3.1
  retention: 6h

  # Controls the frequency of prometheus scraping
  scrapeInterval: 15s

#
# addon servicegraph configuration
#
servicegraph:
  enabled: true
  replicaCount: 1
  image: servicegraph
  service:
    annotations: {}
    name: http
    type: ClusterIP
    externalPort: 8088
    loadBalancerIP:
    loadBalancerSourceRanges:
  prometheusAddr: http://prometheus:9090

#
# addon jaeger tracing configuration
#
tracing:
  enabled: true

#
# addon kiali tracing configuration
#
kiali:
  enabled: false
  replicaCount: 1
  hub: docker.io/kiali
  tag: v0.9
  contextPath: /kiali
  dashboard:
    secretName: kiali
    usernameKey: username
    passphraseKey: passphrase

    # Override the automatically detected Grafana URL, useful when Grafana service has no ExternalIPs
    # grafanaURL:

    # Override the automatically detected Jaeger URL, useful when Jaeger service has no ExternalIPs
    # jaegerURL:
  # prometheus address
  prometheusAddr: http://prometheus:9090

# Common settings used among istio subcharts.
global:
  # Default hub for Istio images.
  # Releases are published to docker hub under 'istio' project.
  # Daily builds from prow are on gcr.io, and nightly builds from circle on docker.io/istionightly
  hub: gcr.io/istio-release

  # Default tag for Istio images.
  tag: release-1.1-latest-daily

  # imagePullPolicy is applied to istio control plane components.
  imagePullPolicy: Always

  policyNamespace: istio-policy
  istioNamespace: istio-pilot11
  configNamespace: istio-system

  # controlPlaneMtls enabled. Will result in delays starting the pods while secrets are
  # propagated, not recommended for tests.
  controlPlaneSecurityEnabled: false

  # Configuration for each of the supported tracers
  tracer:
    # Configuration for envoy to send trace data to LightStep.
    # Disabled by default.
    # address: the <host>:<port> of the satellite pool
    # accessToken: required for sending data to the pool
    # secure: specifies whether data should be sent with TLS
    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is
    #   required. If a value is specified then a secret called "lightstep.cacert" must be created in the destination
    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.
    #
    lightstep:
      address: ""                # example: lightstep-satellite:443
      accessToken: ""            # example: abcdefg1234567
      secure: true               # example: true|false
      cacertPath: ""             # example: /etc/lightstep/cacert.pem
    zipkin:
      # Host:Port for reporting trace data in zipkin format. If not specified, will default to
      # zipkin service (port 9411) in the same namespace as the other istio components.
      address: ""

  # ImagePullSecrets for all ServiceAccount, list of secrets in the same namespace
  # to use for pulling any images in pods that reference this ServiceAccount.
  # For components that don't use ServiceAccounts (i.e. grafana, servicegraph, tracing)
  # ImagePullSecrets will be added to the corresponding Deployment(StatefulSet) objects.
  # Must be set for any clustser configured with private docker registry.
  imagePullSecrets:
    # - private-registry-key

  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:
  #   0 - Never scheduled
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: 2
    s390x: 2
    ppc64le: 2

  # A minimal set of requested resources to applied to all deployments so that
  # Horizontal Pod Autoscaler will be able to function (if set).
  # Each component can overwrite these default values by adding its own resources
  # block in the relevant section below and setting the desired resources values.
  defaultResources: {}
    #requests:
    #  cpu: 10m
    #   memory: 128Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi

  # Kubernetes >=v1.11.0 will create two PriorityClass, including system-cluster-critical and
  # system-node-critical, it is better to configure this in order to make sure your Istio pods
  # will not be killed because of low priority class.
  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  # for more detail.
  priorityClassName: ""

  # Use the Mesh Control Protocol (MCP) for configuring Mixer and
  # Pilot. Requires galley (`--set galley.enabled=true`).
  useMCP: false

  proxy:
    enableCoreDump: false
    image: proxyv2
