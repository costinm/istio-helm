apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: fortio
  annotations:
    kubernetes.io/ingress.class: istio
spec:
  rules:
    - host: fortiocontroling.{{ .Values.domain }}
      http:
        paths:
          - path: /.*
            backend:
              serviceName: fortiotls
              servicePort: 8080


---
# This replaces the "auth.istio.io/8080: MUTUAL_TLS|NONE" service annotation
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: fortiotls
spec:
  peers:
  - mtls: {}
  peer_is_optional: true
  targets:
  # Must be short name of service
  - name: fortiotls
    # subsets: "v2"
    ports:
    # name also supported
    # TODO: this should be target port (container)
    - number: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: fortiotls
spec:
  host:  fortiotls
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
      #client_certificate: /etc/certs/cert-chain.pem
      #private_key: /etc/certs/key.pem
      #ca_certificates: /etc/certs/root-cert.pem
      #subject_alt_names:
      #- spiffe://cluster.local/ns/test/sa/default


---
apiVersion: v1
kind: Service
metadata:
  name: fortiotls
spec:
  ports:
  - port: 8080
    name: http-echo
  - port: 8079
    name: grpc-ping
  selector:
    app: fortiotls
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: fortiotls
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/debug: "{{ .Values.debug }}"
        #sidecar.istio.io/discoveryAddress: "istio-pilot.{{ .Values.pilotns }}:15010"
      labels:
        app: fortiotls
        version: tls
    spec:
      containers:
      - name: fortio
        image: {{ .Values.fortioImage | default "istio/fortio:1.0.1" }}
        ports:
         - containerPort: 8080
         - containerPort: 8081
         - containerPort: 8079
        args:
          - server
        resources:
          requests:
            cpu: 800m
            memory: "1G"
          limits:
            cpu: 1000m
            memory: "1G"

      - name: app
        image: istionightly/app:nightly-release-1.0
        imagePullPolicy: IfNotPresent
        args:
        - --port
        - "8082"
        - --port
        - "80"
        - --port
        - "9090"
        - --port
        - "90"
        - --grpc
        - "7070"
        - --grpc
        - "70"
        - --port
        - "10090"
        - --port
        - "19090"
        - --port
        - "3333"
        - --version
        - "v2"
        ports:
        - containerPort: 8082
        - containerPort: 80
        - containerPort: 9090
        - containerPort: 90
        - containerPort: 10090
        - containerPort: 19090
        - name: tcp-health-port
          containerPort: 3333
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3333
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 10
        readinessProbe:
          tcpSocket:
            port: tcp-health-port
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 10

