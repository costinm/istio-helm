#
# sidecar-injector webhook configuration
#
replicaCount: 1
image: sidecar_injector
enableNamespacesByDefault: false
istio_cni:
  enabled: false

# Values matching mesh config proto, used during the injection
# The fields are part of the alpha API, and must be documented and match the proto.
mesh:
  defaultConfig:
    # Where should envoy's configuration be stored in the istio-proxy container
    configPath: "/etc/istio/proxy"
    binaryPath: "/usr/local/bin/envoy"
    #
    # The mode used to redirect inbound connections to Envoy. This setting
    # has no effect on outbound traffic: iptables REDIRECT is always used for
    # outbound connections.
    # If "REDIRECT", use iptables REDIRECT to NAT and redirect to Envoy.
    # The "REDIRECT" mode loses source addresses during redirection.
    # If "TPROXY", use iptables TPROXY to redirect to Envoy.
    # The "TPROXY" mode preserves both the source and destination IP
    # addresses and ports, so that they can be used for advanced filtering
    # and manipulation.
    # The "TPROXY" mode also configures the sidecar to run with the
    # CAP_NET_ADMIN capability, which is required to use TPROXY.
    #interceptionMode: REDIRECT



# Global contains common fields, used in several Istio components.
# It is possible for each component to use different a setup profile.
global:
  hub: gcr.io/istio-release
  #tag: master-latest-daily
  #tag: release-1.0-latest-daily
  tag: release-1.1-latest-daily

  proxy_init:
    # Base name for the proxy_init container, used to configure iptables.
    # Note that it is different from istio1.0 - same image was used.
    image: proxyv2

  proxy:
    #includeIPRanges: ""
    #excludeIPRanges: ""
    #statusPort
    enableCoreDump: false
    image: proxyv2
    tracer: zipkin

    # DNS domain suffix for pilot proxy agent. Default value is "${POD_NAMESPACE}.svc.cluster.local".
    proxyDomain: ""

    # DNS domain suffix for pilot proxy discovery. Default value is "cluster.local".
    discoveryDomain: ""

    # Resources for the sidecar.
    resources:
      requests:
        cpu: 10m
      #  memory: 128Mi
      # limits:
      #   cpu: 100m
      #   memory: 128Mi

  sds:
    enabled: false

  # Configuration for each of the supported tracers
  tracer:
    # Configuration for envoy to send trace data to LightStep.
    # Disabled by default.
    # address: the <host>:<port> of the satellite pool
    # accessToken: required for sending data to the pool
    # secure: specifies whether data should be sent with TLS
    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is
    #   required. If a value is specified then a secret called "lightstep.cacert" must be created in the destination
    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.
    #
    lightstep:
      address: ""                # example: lightstep-satellite:443
      accessToken: ""            # example: abcdefg1234567
      secure: true               # example: true|false
      cacertPath: ""             # example: /etc/lightstep/cacert.pem
    zipkin:
      # Host:Port for reporting trace data in zipkin format. If not specified, will default to
      # zipkin service (port 9411) in the same namespace as the other istio components.
      address: ""

  arch:
    amd64: 2
    s390x: 2
    ppc64le: 2
