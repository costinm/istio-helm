{{- if .Values.global.k8sIngress.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-autogenerated-k8s-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    chart: ingressgateway
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    istio: {{ .Release.Namespace }}
  servers:
  - port:
      number: 80
      protocol: HTTP2
      name: http
    hosts:
    - "*"
{{ if .Values.global.k8sIngress.enableHttps }}
  - port:
      number: 443
      protocol: HTTPS
      name: https-default
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingress-certs/tls.crt
      privateKey: /etc/istio/ingress-certs/tls.key
    hosts:
    - "*"
{{ end }}    
---    
{{ end }}

{{- if .Values.global.meshExpansion.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: meshexpansion-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: ingressgateway
    chart: ingressgateway
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    istio: {{ .Release.Namespace }}
  servers:
  - port:
      number: 15011
      protocol: TCP
      name: tcp-pilot
    hosts:
    - "*"
  - port:
      number: 8060
      protocol: TCP
      name: tcp-citadel
    hosts:
    - "*"
---
{{- end }}

{{- if .Values.zvpn }}
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-multicluster-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "gateway.name" . }}
    chart: {{ template "gateway.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    istio: {{ .Release.Namespace }}
  servers:
  - hosts:
    - "*.global"
    port:
      name: tls
      number: 15443
      protocol: TLS
    tls: {}
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: istio-multicluster-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "gateway.name" . }}
    chart: {{ template "gateway.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  gateways:
  - istio-multicluster-ingressgateway
  hosts:
  - "*.global"
  tls:
  - match:
    - port: 15443
      sniHosts:
      - "*.global"
    route:
    - destination:        
        host: non.existent.cluster
        port:
          number: 15443
      weight: 100
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: istio-multicluster-ingressgateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "gateway.name" . }}
    chart: {{ template "gateway.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
   workloadLabels:
     istio: {{ .Release.Namespace }}
   filters:
   - listenerMatch:
       portNumber: 15443
       listenerType: GATEWAY
     filterName: envoy.filters.network.sni_cluster
     filterType: NETWORK
     filterConfig: {}
   - listenerMatch:
       portNumber: 15443
       listenerType: GATEWAY
     insertPosition:
       index: AFTER
       relativeTo: envoy.filters.network.sni_cluster
     filterName: envoy.filters.network.tcp_cluster_rewrite
     filterType: NETWORK
     filterConfig:
       cluster_pattern: "\\.global$"
       cluster_replacement: ".svc.cluster.local"       
---
{{- end }}
